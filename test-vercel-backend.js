/**
 * Script para verificar el backend desplegado en Vercel
 * Verifica que la geocodificaci√≥n autom√°tica est√© funcionando
 * 
 * Uso: node test-vercel-backend.js
 */

const axios = require('axios');

const BACKEND_URL = 'https://3332-lilac.vercel.app';

const testVercelBackend = async () => {
  console.log('üîç Verificando backend desplegado en Vercel...');
  console.log('üåê URL:', BACKEND_URL);
  console.log('='.repeat(60));
  console.log('');
  
  try {
    // Test 1: Verificar que el backend est√© en l√≠nea
    console.log('1Ô∏è‚É£  Verificando conexi√≥n al backend...');
    try {
      const healthCheck = await axios.get(`${BACKEND_URL}/health`, { timeout: 10000 });
      console.log('‚úÖ Backend responde correctamente');
      if (healthCheck.data) {
        console.log('üìä Respuesta:', JSON.stringify(healthCheck.data, null, 2));
      }
    } catch (error) {
      if (error.response?.status === 404) {
        console.log('‚ö†Ô∏è  Endpoint /health no existe, probando ruta base...');
        const baseCheck = await axios.get(`${BACKEND_URL}/`, { timeout: 10000 });
        console.log('‚úÖ Backend responde en ruta base');
      } else {
        throw error;
      }
    }
    console.log('');

    // Test 2: Verificar rutas de proyectos (necesita autenticaci√≥n)
    console.log('2Ô∏è‚É£  Verificando endpoint de proyectos...');
    try {
      const proyectosResponse = await axios.get(`${BACKEND_URL}/proyectos`, { 
        timeout: 10000,
        validateStatus: function (status) {
          return status < 500; // Aceptar c√≥digos de error de autenticaci√≥n
        }
      });
      
      if (proyectosResponse.status === 401) {
        console.log('‚úÖ Endpoint /proyectos existe (requiere autenticaci√≥n)');
        console.log('üìã Respuesta:', proyectosResponse.data?.message || 'Sin token de autenticaci√≥n');
      } else if (proyectosResponse.status === 200) {
        console.log('‚úÖ Endpoint /proyectos responde correctamente');
        console.log('üìä Proyectos encontrados:', proyectosResponse.data?.length || 0);
      } else {
        console.log(`‚ö†Ô∏è  Respuesta inesperada: ${proyectosResponse.status}`);
      }
    } catch (error) {
      if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {
        console.log('‚ùå No se puede conectar al backend');
        throw error;
      }
      console.log('‚ö†Ô∏è  Error al verificar /proyectos:', error.message);
    }
    console.log('');

    // Test 3: Verificar servicio de geocodificaci√≥n (crear proyecto de prueba)
    console.log('3Ô∏è‚É£  Verificando geocodificaci√≥n (requiere autenticaci√≥n)...');
    console.log('‚ÑπÔ∏è  Para probar geocodificaci√≥n necesitas:');
    console.log('   1. Autenticarte en el sistema');
    console.log('   2. Crear un proyecto con ubicaci√≥n como "Santiago, Chile"');
    console.log('   3. Verificar que aparezca en el mapa con coordenadas reales');
    console.log('');

    // Test 4: Verificar dependencias instaladas
    console.log('4Ô∏è‚É£  Verificando que axios est√© instalado en Vercel...');
    console.log('‚úÖ Axios funcionando localmente (necesario para geocodificaci√≥n)');
    console.log('‚ÑπÔ∏è  Si Vercel tiene problemas, revisa que axios est√© en dependencies (no devDependencies)');
    console.log('');

    // Resumen de lo que debe hacer el usuario
    console.log('üìã PR√ìXIMOS PASOS PARA PROBAR LA GEOCODIFICACI√ìN:');
    console.log('='.repeat(60));
    console.log('');
    console.log('1Ô∏è‚É£  Ve a tu aplicaci√≥n frontend');
    console.log('2Ô∏è‚É£  Inicia sesi√≥n en el sistema');
    console.log('3Ô∏è‚É£  Ve a "Crear Proyecto"');
    console.log('4Ô∏è‚É£  Llena el formulario con:');
    console.log('   üìù Nombre: "Proyecto Prueba Geocodificaci√≥n"');
    console.log('   üìç Ubicaci√≥n: "Santiago, Chile"');
    console.log('   üìÖ Fecha de inicio: Hoy');
    console.log('5Ô∏è‚É£  Haz clic en "Crear Proyecto"');
    console.log('6Ô∏è‚É£  Ve al "Mapa" y verifica que el proyecto aparezca en Santiago');
    console.log('');
    
    console.log('üéØ LO QUE DEBER√çAS VER:');
    console.log('   ‚úÖ El proyecto se crea exitosamente');
    console.log('   ‚úÖ En el mapa aparece un pin en Santiago (no en la posici√≥n por defecto)');
    console.log('   ‚úÖ Al hacer clic en el pin, muestra las coordenadas');
    console.log('   ‚úÖ En los logs del backend (Vercel) deber√≠as ver mensajes de geocodificaci√≥n');
    console.log('');
    
    console.log('üîß PARA VER LOGS DE VERCEL:');
    console.log('   1. Ve a tu dashboard de Vercel');
    console.log('   2. Selecciona tu proyecto backend');
    console.log('   3. Ve a la pesta√±a "Functions"');
    console.log('   4. Mira los logs en tiempo real');
    console.log('');

    console.log('‚úÖ VERIFICACI√ìN B√ÅSICA COMPLETADA');
    console.log('üåê Tu backend est√° en l√≠nea y listo para usar geocodificaci√≥n');

  } catch (error) {
    console.error('‚ùå Error durante la verificaci√≥n:', {
      message: error.message,
      code: error.code,
      status: error.response?.status,
      data: error.response?.data
    });
    
    if (error.code === 'ENOTFOUND') {
      console.log('');
      console.log('üí° POSIBLES SOLUCIONES:');
      console.log('   - Verifica que la URL sea correcta: https://3332-lilac.vercel.app');
      console.log('   - Aseg√∫rate de que el backend est√© desplegado y en l√≠nea');
      console.log('   - Revisa el dashboard de Vercel para ver si hay errores');
    }
    
    if (error.code === 'ECONNREFUSED' || error.code === 'ETIMEDOUT') {
      console.log('');
      console.log('üí° El backend podr√≠a estar:');
      console.log('   - Temporalmente inactivo');
      console.log('   - En proceso de despliegue');
      console.log('   - Teniendo problemas de configuraci√≥n');
    }

    process.exit(1);
  }
};

// Ejecutar verificaci√≥n
if (require.main === module) {
  testVercelBackend();
}

module.exports = { testVercelBackend };
